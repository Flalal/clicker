/*
 * This file is generated by jOOQ.
 */
package fr.flalal.clicker.storage.tables.records;


import fr.flalal.clicker.storage.tables.Generator;

import java.math.BigDecimal;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GeneratorRecord extends UpdatableRecordImpl<GeneratorRecord> implements Record7<UUID, String, String, BigDecimal, BigDecimal, BigDecimal, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>clicker.generator.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>clicker.generator.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>clicker.generator.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>clicker.generator.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>clicker.generator.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>clicker.generator.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>clicker.generator.base_cost</code>.
     */
    public void setBaseCost(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>clicker.generator.base_cost</code>.
     */
    public BigDecimal getBaseCost() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>clicker.generator.base_multiplier</code>.
     */
    public void setBaseMultiplier(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>clicker.generator.base_multiplier</code>.
     */
    public BigDecimal getBaseMultiplier() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>clicker.generator.base_click_per_second</code>.
     */
    public void setBaseClickPerSecond(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>clicker.generator.base_click_per_second</code>.
     */
    public BigDecimal getBaseClickPerSecond() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>clicker.generator.enabled</code>.
     */
    public void setEnabled(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>clicker.generator.enabled</code>.
     */
    public Boolean getEnabled() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, String, String, BigDecimal, BigDecimal, BigDecimal, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, String, String, BigDecimal, BigDecimal, BigDecimal, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Generator.GENERATOR.ID;
    }

    @Override
    public Field<String> field2() {
        return Generator.GENERATOR.NAME;
    }

    @Override
    public Field<String> field3() {
        return Generator.GENERATOR.DESCRIPTION;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Generator.GENERATOR.BASE_COST;
    }

    @Override
    public Field<BigDecimal> field5() {
        return Generator.GENERATOR.BASE_MULTIPLIER;
    }

    @Override
    public Field<BigDecimal> field6() {
        return Generator.GENERATOR.BASE_CLICK_PER_SECOND;
    }

    @Override
    public Field<Boolean> field7() {
        return Generator.GENERATOR.ENABLED;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public BigDecimal component4() {
        return getBaseCost();
    }

    @Override
    public BigDecimal component5() {
        return getBaseMultiplier();
    }

    @Override
    public BigDecimal component6() {
        return getBaseClickPerSecond();
    }

    @Override
    public Boolean component7() {
        return getEnabled();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public BigDecimal value4() {
        return getBaseCost();
    }

    @Override
    public BigDecimal value5() {
        return getBaseMultiplier();
    }

    @Override
    public BigDecimal value6() {
        return getBaseClickPerSecond();
    }

    @Override
    public Boolean value7() {
        return getEnabled();
    }

    @Override
    public GeneratorRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public GeneratorRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public GeneratorRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public GeneratorRecord value4(BigDecimal value) {
        setBaseCost(value);
        return this;
    }

    @Override
    public GeneratorRecord value5(BigDecimal value) {
        setBaseMultiplier(value);
        return this;
    }

    @Override
    public GeneratorRecord value6(BigDecimal value) {
        setBaseClickPerSecond(value);
        return this;
    }

    @Override
    public GeneratorRecord value7(Boolean value) {
        setEnabled(value);
        return this;
    }

    @Override
    public GeneratorRecord values(UUID value1, String value2, String value3, BigDecimal value4, BigDecimal value5, BigDecimal value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GeneratorRecord
     */
    public GeneratorRecord() {
        super(Generator.GENERATOR);
    }

    /**
     * Create a detached, initialised GeneratorRecord
     */
    public GeneratorRecord(UUID id, String name, String description, BigDecimal baseCost, BigDecimal baseMultiplier, BigDecimal baseClickPerSecond, Boolean enabled) {
        super(Generator.GENERATOR);

        setId(id);
        setName(name);
        setDescription(description);
        setBaseCost(baseCost);
        setBaseMultiplier(baseMultiplier);
        setBaseClickPerSecond(baseClickPerSecond);
        setEnabled(enabled);
    }
}
