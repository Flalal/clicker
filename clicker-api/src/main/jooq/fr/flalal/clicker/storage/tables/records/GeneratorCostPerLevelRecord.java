/*
 * This file is generated by jOOQ.
 */
package fr.flalal.clicker.storage.tables.records;


import fr.flalal.clicker.storage.tables.GeneratorCostPerLevel;

import java.math.BigDecimal;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GeneratorCostPerLevelRecord extends UpdatableRecordImpl<GeneratorCostPerLevelRecord> implements Record4<UUID, Integer, BigDecimal, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>clicker.generator_cost_per_level.id_generator</code>.
     */
    public void setIdGenerator(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>clicker.generator_cost_per_level.id_generator</code>.
     */
    public UUID getIdGenerator() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>clicker.generator_cost_per_level.level</code>.
     */
    public void setLevel(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>clicker.generator_cost_per_level.level</code>.
     */
    public Integer getLevel() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>clicker.generator_cost_per_level.cost</code>.
     */
    public void setCost(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>clicker.generator_cost_per_level.cost</code>.
     */
    public BigDecimal getCost() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>clicker.generator_cost_per_level.click_per_second</code>.
     */
    public void setClickPerSecond(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>clicker.generator_cost_per_level.click_per_second</code>.
     */
    public BigDecimal getClickPerSecond() {
        return (BigDecimal) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, Integer, BigDecimal, BigDecimal> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, Integer, BigDecimal, BigDecimal> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return GeneratorCostPerLevel.GENERATOR_COST_PER_LEVEL.ID_GENERATOR;
    }

    @Override
    public Field<Integer> field2() {
        return GeneratorCostPerLevel.GENERATOR_COST_PER_LEVEL.LEVEL;
    }

    @Override
    public Field<BigDecimal> field3() {
        return GeneratorCostPerLevel.GENERATOR_COST_PER_LEVEL.COST;
    }

    @Override
    public Field<BigDecimal> field4() {
        return GeneratorCostPerLevel.GENERATOR_COST_PER_LEVEL.CLICK_PER_SECOND;
    }

    @Override
    public UUID component1() {
        return getIdGenerator();
    }

    @Override
    public Integer component2() {
        return getLevel();
    }

    @Override
    public BigDecimal component3() {
        return getCost();
    }

    @Override
    public BigDecimal component4() {
        return getClickPerSecond();
    }

    @Override
    public UUID value1() {
        return getIdGenerator();
    }

    @Override
    public Integer value2() {
        return getLevel();
    }

    @Override
    public BigDecimal value3() {
        return getCost();
    }

    @Override
    public BigDecimal value4() {
        return getClickPerSecond();
    }

    @Override
    public GeneratorCostPerLevelRecord value1(UUID value) {
        setIdGenerator(value);
        return this;
    }

    @Override
    public GeneratorCostPerLevelRecord value2(Integer value) {
        setLevel(value);
        return this;
    }

    @Override
    public GeneratorCostPerLevelRecord value3(BigDecimal value) {
        setCost(value);
        return this;
    }

    @Override
    public GeneratorCostPerLevelRecord value4(BigDecimal value) {
        setClickPerSecond(value);
        return this;
    }

    @Override
    public GeneratorCostPerLevelRecord values(UUID value1, Integer value2, BigDecimal value3, BigDecimal value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GeneratorCostPerLevelRecord
     */
    public GeneratorCostPerLevelRecord() {
        super(GeneratorCostPerLevel.GENERATOR_COST_PER_LEVEL);
    }

    /**
     * Create a detached, initialised GeneratorCostPerLevelRecord
     */
    public GeneratorCostPerLevelRecord(UUID idGenerator, Integer level, BigDecimal cost, BigDecimal clickPerSecond) {
        super(GeneratorCostPerLevel.GENERATOR_COST_PER_LEVEL);

        setIdGenerator(idGenerator);
        setLevel(level);
        setCost(cost);
        setClickPerSecond(clickPerSecond);
    }
}
